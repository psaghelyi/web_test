
volumes:
  sockets: {}

services:
  proxy:
    image: nginx:latest
    restart: unless-stopped
    volumes:
      - sockets:/sockets
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:8000"
    depends_on:
      - web

  web:
    image: "${REGISTRY:-psaghelyi}/web_unicorn"
    #build:
    #  context: web_rubyrails
    #  dockerfile: Dockerfile.unicorn   
    platform: linux/amd64
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
    # https://opentelemetry.io/docs/languages/sdk-configuration/otlp-exporter/
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://aws-cloudwatch-agent:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.namespace=NSWebTest,service.name=Web,aws.log.group.names=/local-docker/web-test
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - WORKERS=2
    volumes:
      - sockets:/sockets
    expose:
      - 8080
    depends_on:
      - echo
      - aws-ot-collector
      - aws-cloudwatch-agent

  echo:
    image: "${REGISTRY:-psaghelyi}/web_unicorn"
    #build:
    #  context: web_rubyrails
    #  dockerfile: Dockerfile.unicorn      
    platform: linux/amd64
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://aws-cloudwatch-agent:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.namespace=NSWebTest,service.name=Echo,aws.log.group.names=/local-docker/web-test
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_TRACES_EXPORTER=otlp
      - WORKERS=2
    expose:
      - 8080
    depends_on:
      - aws-ot-collector
      - aws-cloudwatch-agent

  aws-ot-collector:
    image: public.ecr.aws/aws-observability/aws-otel-collector:latest
    platform: linux/amd64
    restart: unless-stopped
    command: ["--config=/etc/otel-agent-config.yaml"]
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      - AWS_EMF_LOG_GROUP_NAME=/local-docker/web-test
    volumes:
      - ./otel-config.yaml:/etc/otel-agent-config.yaml
    expose:
      - 4317
      - 4318
      - 2000
    
  aws-cloudwatch-agent:
    image: amazon/cloudwatch-agent:latest
    platform: linux/amd64
    restart: unless-stopped
    environment:
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    volumes:
      - ./cloud-watch.json:/etc/cwagentconfig/cloud-watch.json
      - ./.logs/cloudwatch:/var/log
    command: ["/opt/aws/amazon-cloudwatch-agent/bin/start-amazon-cloudwatch-agent"]
    expose:
      - 4317
      - 4318
      - 2000


  #locust:
  #  image: "${REGISTRY:-psaghelyi}/locust"
  #  command: -f /locust/locustfile.py --worker --master-host locust-master
  #  restart: unless-stopped
  #  environment:
  #    - RELAY_URL=http://echo:8080/waitrnd?ms=200
  #  extra_hosts:
  #    - host.docker.internal:host-gateway
  #  depends_on:
  #    - locust-master

  #locust-master:
  #  image: "${REGISTRY:-psaghelyi}/locust"
  #  command: -f /locust/locustfile.py --master --host http://host.docker.internal:8000
  #  restart: unless-stopped
  #  environment:
  #    - INFLUXDB_PATH=http://host.docker.internal:8086
  #  extra_hosts:
  #    - host.docker.internal:host-gateway
  #  ports:
  #    - "8089:8089"
